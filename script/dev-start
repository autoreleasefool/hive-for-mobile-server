#!/bin/sh
# For use on macOS

set -o allexport
source secret/env-dev
set +o allexport

reset_nginx=false
reset_ngrok=false

while getopts 'ri' flag; do
	case "${flag}" in
		i) reset_nginx=true ;;
		r) reset_ngrok=true ;;
	esac
done

NGINX_PORT=8081
PROJECT_PORT=8080
PROJECT_HOST="localhost"
PROJECT_DIR=$(pwd)
IOS_PROJECT_DIR="$PROJECT_DIR/../hive-for-ios"
NGROK_TUNNELS_URL="http://127.0.0.1:4040/api/tunnels"

# nginx setup

if [ "$reset_nginx" = true ]; then
	cp 'config/nginx/hive-for-mobile-server.local.conf' $NGINX_CONF_DEST
	sed -i '' "s/\$PORT/$NGINX_PORT/g" $NGINX_CONF_DEST
	sed -i '' "s~\$PROJECT_DIR~$PROJECT_DIR~g" $NGINX_CONF_DEST
	sed -i '' "s/\$PROJECT_HOST/$PROJECT_HOST/g" $NGINX_CONF_DEST
	sed -i '' "s/\$PROJECT_PORT/$PROJECT_PORT/g" $NGINX_CONF_DEST
	brew services restart nginx
fi

brew services start nginx

# ngrok setup

response=$(curl --write-out '%{http_code}' --silent --output /dev/null $NGROK_TUNNELS_URL)

if [ "$response" != 200 ] || [ "$reset_ngrok" = true ]; then
	pkill -f ngrok
	EXEC=$(ngrok http --host-header="$PROJECT_HOST:$PROJECT_PORT" "https://$PROJECT_HOST:$NGINX_PORT" >> /dev/null &)
	sleep 5s
fi

domain=$(curl --silent --show-error $NGROK_TUNNELS_URL | sed -nE 's/.*public_url":"https:..([^"]*).*/\1/p')
url="https:\/\/$domain"
sed -i '' "s/baseURL = URL[(]string: \".*\"[)]!/baseURL = URL(string: \"$url\")!/g" "${IOS_PROJECT_DIR}/Hive-for-iOS/Source/API/HiveAPI.swift"
echo "ngrok url: $url"
